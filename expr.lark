%import common.INT -> INT
%import common.CNAME -> ID
%import common.WS

%ignore WS

_TRUE: "true"
_FALSE: "false"

?expr: "ifnz" expr "then" expr "else" expr -> ifnz
     | expr1

?expr1:rotateexp
     | combineexp
     | lightenexp
     | darkenexp
     | expr1 "&&" term -> andexpr
     | expr1 "||" term -> orexpr
     | expr1 "==" term -> eqexpr
     | expr1 "<" term -> lessexpr
     | expr1 "+" term  -> plus
     | expr1 "-" term -> minus
     | term

rotateexp: "rotate" "(" expr ")"
combineexp: "combine" "(" expr "," expr ")"
lightenexp: "lighten" "(" expr ")"
darkenexp: "darken" "(" expr ")"

?term: term "*" factor -> times
     | term "/" factor -> divide
     | factor

?factor:"!" factor -> notexpr
     | "-" factor  -> neg
     |  atom

?args: (expr ("," expr)*)? -> args

?params: (ID ("," ID)*)? -> params

?atom: _TRUE -> true 
     | _FALSE -> false
     | ID  -> id
     | INT -> int
     | atom "(" args ")" -> app
     | "(" expr ")"    
     | "let" ID "=" expr "in" expr "end" -> let
     | "letfun" ID "(" params ")" "=" expr "in" expr "end" -> letfun

